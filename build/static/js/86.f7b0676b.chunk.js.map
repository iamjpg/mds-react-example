{"version":3,"file":"static/js/86.f7b0676b.chunk.js","mappings":"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","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-confirm-input.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-42f8725f.js';\n\nconst MxConfirmInput = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isEmittingEventAfterConfirm = false;\n    this.type = 'text';\n    this.dense = false;\n    this.disabled = false;\n    this.readonly = false;\n    this.outerContainerClass = '';\n    this.labelClass = '';\n    this.error = false;\n    this.floatLabel = false;\n    this.textarea = false;\n    this.textareaHeight = '250px';\n    this.hideCharacterCount = false;\n    this.isFocused = false;\n    this.isHovered = false;\n  }\n  onValueChange() {\n    this.previousValue = this.value;\n    this.mxInput.value = this.value;\n  }\n  connectedCallback() {\n    this.previousValue = this.value;\n  }\n  get rightIcons() {\n    if (this.isFocused) {\n      return [\n        { icon: 'mds-x', ariaLabel: 'Cancel', onClick: this.onCancel.bind(this) },\n        { icon: 'mds-check', ariaLabel: 'Okay', onClick: this.onConfirm.bind(this) },\n      ];\n    }\n    const canEdit = this.value != null && this.value !== '' && !this.readonly && !this.disabled;\n    const canHover = window.matchMedia('(hover: hover)');\n    if ((this.isHovered || !canHover.matches) && canEdit)\n      return 'mds-edit';\n  }\n  onCancel(e) {\n    if (e)\n      e.stopPropagation(); // Do not focus input when clicking cancel button\n    if (!this.mxInput)\n      return;\n    this.mxInput.value = this.previousValue;\n    if (document.activeElement && this.mxInput.contains(document.activeElement))\n      document.activeElement.blur();\n  }\n  onConfirm(e) {\n    if (e)\n      e.stopPropagation(); // Do not focus input when clicking confirm button\n    this.value = this.mxInput.value;\n    if (this.mxInput) {\n      const input = this.mxInput.querySelector('input');\n      this.isEmittingEventAfterConfirm = true; // Stop blocking input events temporarily\n      input && input.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));\n    }\n    if (document.activeElement)\n      document.activeElement.blur();\n  }\n  onFocusin() {\n    this.isFocused = true;\n  }\n  async onFocusout() {\n    await new Promise(requestAnimationFrame); // Wait a tick in case confirm button was clicked\n    if (document.activeElement && this.mxInput.contains(document.activeElement))\n      return;\n    this.isFocused = false;\n    this.onCancel();\n  }\n  onMouseEnter() {\n    this.isHovered = true;\n  }\n  onMouseLeave() {\n    this.isHovered = false;\n  }\n  onInput(e) {\n    if (!this.isEmittingEventAfterConfirm) {\n      e.stopPropagation(); // Only emit input event after confirmation\n    }\n    else {\n      this.isEmittingEventAfterConfirm = false;\n    }\n  }\n  onKeyDown(e) {\n    if (e.key === 'Escape')\n      this.onCancel();\n    if (e.target.closest('button'))\n      return; // Pressing Enter while Cancel button is focused should not confirm\n    if (e.key === 'Enter')\n      this.onConfirm();\n  }\n  render() {\n    return (h(Host, { class: 'mx-confirm-input block' + (this.value != null && this.value !== '' ? ' has-value' : '') }, h(\"mx-input\", { ref: el => (this.mxInput = el), name: this.name, inputId: this.inputId, label: this.label, placeholder: this.placeholder, value: this.value, type: this.type, dense: this.dense, disabled: this.disabled, readonly: this.readonly, maxlength: this.maxlength, leftIcon: this.leftIcon, suffix: this.suffix, outerContainerClass: this.outerContainerClass, labelClass: this.labelClass, error: this.error, assistiveText: this.assistiveText, floatLabel: this.floatLabel, rightIcon: this.rightIcons, elAriaLabel: this.elAriaLabel, hideCharacterCount: this.hideCharacterCount, onFocusin: this.onFocusin.bind(this), onFocusout: this.onFocusout.bind(this), onInput: this.onInput.bind(this), onKeyDown: this.onKeyDown.bind(this), onMouseEnter: this.onMouseEnter.bind(this), onMouseLeave: this.onMouseLeave.bind(this) })));\n  }\n  static get watchers() { return {\n    \"value\": [\"onValueChange\"]\n  }; }\n};\n\nexport { MxConfirmInput as mx_confirm_input };\n"],"names":["MxConfirmInput","hostRef","registerInstance","this","isEmittingEventAfterConfirm","type","dense","disabled","readonly","outerContainerClass","labelClass","error","floatLabel","textarea","textareaHeight","hideCharacterCount","isFocused","isHovered","previousValue","value","mxInput","icon","ariaLabel","onClick","onCancel","bind","onConfirm","canEdit","canHover","window","matchMedia","matches","e","stopPropagation","document","activeElement","contains","blur","input","querySelector","dispatchEvent","Event","bubbles","cancelable","Promise","requestAnimationFrame","key","target","closest","h","Host","class","ref","el","name","inputId","label","placeholder","maxlength","leftIcon","suffix","assistiveText","rightIcon","rightIcons","elAriaLabel","onFocusin","onFocusout","onInput","onKeyDown","onMouseEnter","onMouseLeave"],"sourceRoot":""}