{"version":3,"file":"static/js/624.803b0b67.chunk.js","mappings":"wPAKMA,EAAS,WACb,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,MAAOC,EAAAA,EAAAA,KAEZF,KAAKG,YAAc,EAEnBH,KAAKI,UAAW,EAEhBJ,KAAKK,UAAW,EAEhBL,KAAKM,SAAW,QAEhBN,KAAKO,QAAS,EAEdP,KAAKQ,UAAY,QAClB,CAhBY,6CAiBb,WACER,KAAKO,OAASP,KAAKS,OAAST,KAAKU,MAClC,GAnBY,8BAoBb,WACE,IAAIC,EAAWX,KAAKY,QAAQC,mBAE5BF,EAAWX,KAAKY,QAAQE,cAAc,sCAAwCH,GACrEI,aAAa,mBAAoBf,KAAKC,MAC/CU,EAASK,iBAAiB,aAAchB,KAAKS,KAAKQ,KAAKjB,OACvDW,EAASK,iBAAiB,aAAchB,KAAKU,KAAKO,KAAKjB,QAC5B,IAAvBW,EAASO,WACXP,EAASO,SAAW,GACtBP,EAASK,iBAAiB,QAAShB,KAAKS,KAAKQ,KAAKjB,OAClDW,EAASK,iBAAiB,OAAQhB,KAAKU,KAAKO,KAAKjB,MAClD,GA/BY,2DAgCb,iGACEmB,aAAanB,KAAKoB,cACdpB,KAAKO,OAFX,iDAIEP,KAAKoB,YAAcC,YAAU,uBAAC,0FAC5B,EAAKd,QAAS,EADc,UAECe,EAAAA,EAAAA,GAAc,EAAKV,QAAQC,kBAAmB,EAAKU,YAAa,EAAKf,UAAW,CAAC,EAAG,IAFrF,OAE5B,EAAKgB,gBAFuB,QAG5BC,EAAAA,EAAAA,GAAO,EAAKF,aAHgB,2CAI3BvB,KAAKG,aARV,gDAhCa,iHA0Cb,sFACEgB,aAAanB,KAAKoB,aACbpB,KAAKO,OAFZ,kEAIQmB,EAAAA,EAAAA,GAAQ1B,KAAKuB,aAJrB,UAKEvB,KAAKO,QAAS,EACTP,KAAKwB,gBANZ,iDAQExB,KAAKwB,gBAAgBG,UACrB3B,KAAKwB,gBAAkB,KATzB,iDA1Ca,gFAqDb,WACE,IAAII,EAAM,wDAaV,OAZK5B,KAAKO,SACRqB,GAAO,WACL5B,KAAKK,WACPuB,GAAO,aACL5B,KAAKI,SACPwB,GAAO,4BAGPA,GAAO,0BAEL5B,KAAK6B,eACPD,GAAO,IAAM5B,KAAK6B,cACbD,CACR,GApEY,oBAqEb,WAAS,WACP,OAAQE,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAO,gBAAiBF,EAAAA,EAAAA,GAAE,OAAQ,OAAOA,EAAAA,EAAAA,GAAE,MAAO,CAAEG,IAAK,SAAAC,GAAE,OAAK,EAAKX,YAAcW,CAAxB,EAA6BC,GAAInC,KAAKC,KAAMmC,KAAM,UAAWJ,MAAOhC,KAAKqC,eAAgBC,MAAO,CAAEhC,SAAUN,KAAKM,UAAY,cAAe,YAAawB,EAAAA,EAAAA,GAAE,OAAQ,CAAES,KAAM,WAAavC,KAAKwC,QAC3Q,GAvEY,mBAwEb,WAAgB,OAAOC,EAAAA,EAAAA,GAAWzC,KAAQ,IAxE7B,qBAyEb,WAAwB,MAAO,CAC7B,OAAU,CAAC,kBACT,KA3ES,I","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-tooltip.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-42f8725f.js';\nimport { c as createPopover } from './popover-90f190d0.js';\nimport { f as fadeIn, b as fadeOut } from './transitions-29f7f3e5.js';\nimport { u as uuidv4 } from './utils-eee50014.js';\n\nconst MxTooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.uuid = uuidv4();\n    /** Delay showing the tooltip for this many milliseconds */\n    this.appearDelay = 0;\n    /** Increase the padding, add a shadow, and make the corners less rounded (typically for multi-line text) */\n    this.extended = false;\n    /** Invert the default colors (i.e. dark text on a light background) */\n    this.inverted = false;\n    /** The maximum width of the tooltip (e.g. '20rem') */\n    this.maxWidth = '10rem';\n    /** This is typically updated automatically based on events, but may be changed programmatically if necessary. */\n    this.isOpen = false;\n    /** The preferred placement of the tooltip, relative to the anchor element. */\n    this.placement = 'bottom';\n  }\n  onIsOpenChange() {\n    this.isOpen ? this.show() : this.hide();\n  }\n  componentDidLoad() {\n    let anchorEl = this.element.firstElementChild;\n    // For custom elements that wrap buttons, inputs, attach event listeners to the native element\n    anchorEl = this.element.querySelector('a, button, input, [role=\"button\"]') || anchorEl;\n    anchorEl.setAttribute('aria-describedby', this.uuid);\n    anchorEl.addEventListener('mouseenter', this.show.bind(this));\n    anchorEl.addEventListener('mouseleave', this.hide.bind(this));\n    if (anchorEl.tabIndex === -1)\n      anchorEl.tabIndex = 0;\n    anchorEl.addEventListener('focus', this.show.bind(this));\n    anchorEl.addEventListener('blur', this.hide.bind(this));\n  }\n  async show() {\n    clearTimeout(this.openTimeout);\n    if (this.isOpen)\n      return;\n    this.openTimeout = setTimeout(async () => {\n      this.isOpen = true;\n      this.popoverInstance = await createPopover(this.element.firstElementChild, this.tooltipElem, this.placement, [0, 4]);\n      fadeIn(this.tooltipElem);\n    }, this.appearDelay);\n  }\n  async hide() {\n    clearTimeout(this.openTimeout);\n    if (!this.isOpen)\n      return;\n    await fadeOut(this.tooltipElem);\n    this.isOpen = false;\n    if (!this.popoverInstance)\n      return;\n    this.popoverInstance.destroy();\n    this.popoverInstance = null;\n  }\n  get tooltipClasses() {\n    let str = 'mx-tooltip caption1 absolute pointer-events-none z-50';\n    if (!this.isOpen)\n      str += ' hidden';\n    if (this.inverted)\n      str += ' inverted';\n    if (this.extended) {\n      str += ' p-16 rounded-lg shadow-4';\n    }\n    else {\n      str += ' px-12 py-4 rounded-2xl';\n    }\n    if (this.tooltipClass)\n      str += ' ' + this.tooltipClass;\n    return str;\n  }\n  render() {\n    return (h(Host, { class: \"inline-flex\" }, h(\"slot\", null), h(\"div\", { ref: el => (this.tooltipElem = el), id: this.uuid, role: \"tooltip\", class: this.tooltipClasses, style: { maxWidth: this.maxWidth }, \"data-testid\": \"tooltip\" }, h(\"slot\", { name: \"tooltip\" }, this.value))));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"isOpen\": [\"onIsOpenChange\"]\n  }; }\n};\n\nexport { MxTooltip as mx_tooltip };\n"],"names":["MxTooltip","hostRef","registerInstance","this","uuid","uuidv4","appearDelay","extended","inverted","maxWidth","isOpen","placement","show","hide","anchorEl","element","firstElementChild","querySelector","setAttribute","addEventListener","bind","tabIndex","clearTimeout","openTimeout","setTimeout","createPopover","tooltipElem","popoverInstance","fadeIn","fadeOut","destroy","str","tooltipClass","h","Host","class","ref","el","id","role","tooltipClasses","style","name","value","getElement"],"sourceRoot":""}