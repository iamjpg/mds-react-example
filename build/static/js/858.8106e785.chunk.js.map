{"version":3,"file":"static/js/858.8106e785.chunk.js","mappings":"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","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-dropdown-menu.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-42f8725f.js';\n\nconst MxDropdownMenu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.disabled = false;\n    this.readonly = false;\n    this.dense = false;\n    /** Style as a filter dropdown with a 1dp elevation */\n    this.elevated = false;\n    /** Style as a filter dropdown with a \"flat\" border color */\n    this.flat = false;\n    this.isFocused = false;\n  }\n  async onClick(e) {\n    // Resize the menu width to match the input.  This is done every click in case the input is resized after initial load.\n    this.menu.style.width = this.dropdownWrapper.getBoundingClientRect().width + 'px';\n    const clickedMenuItem = e.target.closest('mx-menu-item');\n    if (!clickedMenuItem)\n      return;\n    this.value = await clickedMenuItem.getValue();\n    // Fire native input event for consistency with mx-select\n    this.inputElem.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));\n  }\n  componentDidLoad() {\n    this.updateInputValue();\n    this.attachMenu();\n  }\n  onValueChange() {\n    this.updateInputValue();\n  }\n  attachMenu() {\n    if (!this.disabled && !this.readonly)\n      this.menu.anchorEl = this.dropdownWrapper;\n    else\n      this.menu.anchorEl = undefined;\n  }\n  onBlur() {\n    if (this.menu && this.menu.isOpen)\n      return; // Style as focused/active while menu is open\n    this.isFocused = false;\n  }\n  onFocus() {\n    this.isFocused = true;\n    this.error = false;\n  }\n  onMenuClose(e) {\n    e.stopPropagation();\n    if (!this.inputElem.contains(document.activeElement))\n      this.isFocused = false;\n  }\n  updateInputValue() {\n    this.inputElem.value = this.value;\n  }\n  get dropdownWrapperClass() {\n    let str = 'dropdown-wrapper flex items-center relative rounded-lg';\n    str += this.dense ? ' h-36' : ' h-48';\n    if (this.elevated)\n      str += ' elevated shadow-1';\n    if (this.flat)\n      str += ' flat';\n    str += this.isFocused ? ' focused border-2' : ' border';\n    if (this.disabled || this.readonly)\n      str += ' disabled';\n    if (this.error)\n      str += ' error';\n    if (this.dropdownClass)\n      str += ' ' + this.dropdownClass;\n    return str;\n  }\n  get inputClass() {\n    let str = 'absolute inset-0 w-full h-full pl-16 overflow-hidden outline-none appearance-none select-none bg-transparent cursor-pointer disabled:cursor-auto';\n    if (this.isFocused)\n      str += ' -ml-1'; // prevent shifting due to border-width change\n    return str;\n  }\n  get suffixClass() {\n    let str = 'icon-suffix absolute flex items-center h-full right-12 space-x-8 pointer-events-none';\n    if (this.isFocused)\n      str += ' -mr-1'; // prevent shifting due to border-width change\n    return str;\n  }\n  render() {\n    return (h(Host, { class: \"mx-dropdown-menu block text-3\" }, h(\"div\", { ref: el => (this.dropdownWrapper = el), class: this.dropdownWrapperClass }, h(\"input\", { \"aria-label\": this.elAriaLabel || this.label, class: this.inputClass, id: this.dropdownId, name: this.name, onBlur: this.onBlur.bind(this), onFocus: this.onFocus.bind(this), placeholder: this.label, disabled: this.disabled, readonly: !this.disabled, ref: el => (this.inputElem = el), tabindex: \"0\", type: \"text\" }), h(\"span\", { class: this.suffixClass }, this.suffix && h(\"span\", { class: \"suffix flex items-center h-full px-4\" }, this.suffix), this.error ? (h(\"i\", { class: \"mds-warning-circle text-icon pointer-events-none\" })) : (h(\"i\", { \"data-testid\": \"arrow\", class: \"mds-arrow-triangle-down text-icon\" })))), this.assistiveText && h(\"div\", { class: \"assistive-text caption1 mt-4 ml-16\" }, this.assistiveText), h(\"mx-menu\", { ref: el => (this.menu = el), placement: \"bottom\", offset: [0, 1], onMxClose: this.onMenuClose.bind(this) }, h(\"slot\", null))));\n  }\n  static get watchers() { return {\n    \"value\": [\"onValueChange\"],\n    \"disabled\": [\"attachMenu\"],\n    \"readonly\": [\"attachMenu\"]\n  }; }\n};\n\nexport { MxDropdownMenu as mx_dropdown_menu };\n"],"names":["MxDropdownMenu","hostRef","registerInstance","this","disabled","readonly","dense","elevated","flat","isFocused","e","menu","style","width","dropdownWrapper","getBoundingClientRect","clickedMenuItem","target","closest","getValue","value","inputElem","dispatchEvent","Event","bubbles","cancelable","updateInputValue","attachMenu","anchorEl","undefined","isOpen","error","stopPropagation","contains","document","activeElement","str","dropdownClass","h","Host","class","ref","el","dropdownWrapperClass","elAriaLabel","label","inputClass","id","dropdownId","name","onBlur","bind","onFocus","placeholder","tabindex","type","suffixClass","suffix","assistiveText","placement","offset","onMxClose","onMenuClose"],"sourceRoot":""}