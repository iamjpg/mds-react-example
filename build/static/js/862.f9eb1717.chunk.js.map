{"version":3,"file":"static/js/862.f9eb1717.chunk.js","mappings":"gOAEMA,EAAa,WACjB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,mBAAoBC,EAAAA,EAAAA,GAAYF,KAAM,oBAAqB,GAChEA,KAAKG,iBAAkB,EACvBH,KAAKI,YAAa,EAClBJ,KAAKK,UAAW,EAEhBL,KAAKM,aAAc,EAEnBN,KAAKO,WAAY,EAEjBP,KAAKQ,UAAY,QAEjBR,KAAKS,QAAS,EACdT,KAAKU,OAAQ,EAEbV,KAAKW,cAAgB,YAErBX,KAAKY,cAAgB,QAErBZ,KAAKa,YAAa,EAElBb,KAAKc,aAAc,EAEnBd,KAAKe,kBAAoB,SAEzBf,KAAKgB,YAAa,EAElBhB,KAAKiB,UAAW,EAEhBjB,KAAKkB,kBAAmB,EAExBlB,KAAKmB,kBAAoB,SACzBnB,KAAKoB,gBAAiB,EACtBpB,KAAKqB,gBAAiB,CACvB,CApCgB,mDAqCjB,WACMrB,KAAKsB,eACPtB,KAAKa,YAAa,GACpBb,KAAKC,kBAAkBsB,KAAKvB,KAAKsB,aAClC,GAzCgB,+BA0CjB,WACEtB,KAAKwB,sBACN,GA5CgB,iCA6CjB,WACExB,KAAKG,kBAAoBH,KAAKyB,QAAQC,cAAc,yBACpD1B,KAAKI,aAAeJ,KAAKyB,QAAQC,cAAc,oBAC/C1B,KAAKK,WAAaL,KAAKyB,QAAQC,cAAc,iBAC9C,GAjDgB,iEAkDjB,sFACO1B,KAAK2B,UAAW3B,KAAKc,YAD5B,iDAGEd,KAAKqB,gBAAiB,EACtBrB,KAAKa,YAAa,EAClBb,KAAKc,aAAc,EACnBd,KAAK4B,UAAUC,MAAQ,GACvB7B,KAAK4B,UAAUE,cAAc,IAAIC,OAAOC,MAAM,SAAU,CAAEC,SAAS,EAAMC,YAAY,KACrFlC,KAAK4B,UAAUE,cAAc,IAAIC,OAAOC,MAAM,QAAS,CAAEC,SAAS,EAAMC,YAAY,KACpFlC,KAAKC,kBAAkBsB,KAAK,MAT9B,gDAlDiB,uHA6DjB,uFACMvB,KAAK2B,QADX,iDAGE3B,KAAKqB,gBAAiB,EACtBrB,KAAK4B,UAAUC,MAAQ,GACvB7B,KAAK4B,UAAUO,QALjB,gDA7DiB,iFAoEjB,SAAcC,GACZA,EAAEC,kBACFD,EAAEE,iBACEtC,KAAKc,cAEJd,KAAK2B,QAIR3B,KAAKuC,aAHLvC,KAAKwC,aAKR,GA/EgB,qBAgFjB,SAAQJ,GACNpC,KAAKU,OAAQ,EACbV,KAAKqB,eAAiBe,EAAEK,OAAOC,OAASN,EAAEK,OAAOC,MAAMC,OAAS,EAC5D3C,KAAKqB,eACPrB,KAAK4C,mBAAmBR,EAAEK,OAAOC,MAAM,IAEvC1C,KAAK6C,iBAAmB,IAC3B,GAvFgB,gCAwFjB,SAAmBC,GAAM,WAEvB,GADA9C,KAAK6C,iBAAmB,KACnB,sBAAsBE,KAAKD,EAAKE,MAArC,CAEA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,EAAKN,iBAAmBI,EAAOG,OAC/B,EAAKnD,kBAAkBsB,KAAK,EAAKsB,iBAClC,EACDI,EAAOI,cAAcP,EANb,CAOT,GAlGgB,wBAmGjB,WACE9C,KAAKoB,gBAAiB,CACvB,GArGgB,yBAsGjB,WACEpB,KAAKoB,gBAAiB,CACvB,GAxGgB,kBAyGjB,WACE,IAAMkC,EAAS,GAKf,OAJItD,KAAKM,aACPgD,EAAOC,KAAK,WACVvD,KAAKO,WACP+C,EAAOC,KAAK,QACPD,EAAOE,KAAK,MAAQ,IAC5B,GAhHgB,yBAkHjB,WACE,OAAIxD,KAAKyD,MACAzD,KAAKyD,MACPzD,KAAKS,OAAS,OAAS,OAC/B,GAtHgB,0BAuHjB,WACE,OAAIT,KAAK0D,OACA1D,KAAK0D,OACP1D,KAAKS,OAAS,OAAS,MAC/B,GA3HgB,yBA4HjB,WACE,IAAIkD,EAAM,oEAMV,OALI3D,KAAK2B,UACPgC,GAAO,cACL3D,KAAKoB,iBACPuC,GAAO,cACTA,GAAO3D,KAAKiB,UAAYjB,KAAKkB,iBAAmB,SAAW,QAE5D,GApIgB,mBAqIjB,WACE,OAAOlB,KAAKqB,gBAAkBrB,KAAKa,UACpC,GAvIgB,oCAwIjB,WACE,IAAI+C,EAAM5D,KAAKsB,aAGf,OAFItB,KAAKqB,iBACPuC,EAAM5D,KAAK6C,kBACRe,EAEE,OAAP,OAAcA,EAAd,KADS,IAEV,GA/IgB,mCAgJjB,WACE,MAAK,CAAC,UAAW,QAAS,OAAQ,WAAWC,SAAS7D,KAAKY,eAEhC,YAAvBZ,KAAKY,cACA,YACFZ,KAAKY,cAHH,OAIV,GAtJgB,oBAuJjB,WAAS,IACHkD,EADG,OAWP,OAREA,EADE9D,KAAK+D,MACGC,EAAAA,EAAAA,GAAE,IAAK,CAAE,cAAe,cAAeC,MAAO,iBAAmBjE,KAAK+D,OAEzE/D,KAAKS,QACFuD,EAAAA,EAAAA,GAAE,IAAK,CAAE,cAAe,cAAeC,MAAO,+BAG9CD,EAAAA,EAAAA,GAAE,IAAK,CAAE,cAAe,aAAcC,MAAO,uBAAyBjE,KAAKkB,iBAAmB,QAAU,OAE5G8C,EAAAA,EAAAA,GAAEE,EAAAA,EAAM,CAAED,MAAO,0BAA2BD,EAAAA,EAAAA,GAAE,MAAO,CAAE,cAAe,mBAAoBC,MAAO,uGAAwGE,MAAO,CAAET,OAAQ1D,KAAKoE,eAAgBX,MAAOzD,KAAKqE,iBAAmBL,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAOjE,KAAKsE,gBAAiBN,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,2DAA6DjE,KAAKiB,UAAY6C,GAASE,EAAAA,EAAAA,GAAE,OAAQ,CAAEhB,KAAM,kBAAmBgB,EAAAA,EAAAA,GAAE,MAAO,CAAE,cAAe,gBAAiBC,MAAO,eAAiBjE,KAAKkB,mBAAqBlB,KAAKS,OAAS,GAAK,aAAcuD,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,kBAAoB,MAAOjE,KAAKQ,UAAW,aAAawD,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,oBAAsB,gBAAiBjE,KAAKQ,eAAewD,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,qDAAsDR,MAAO,OAAQC,OAAQ,SAAUM,EAAAA,EAAAA,GAAE,OAAQ,CAAEP,MAAO,OAAQC,OAAQ,OAAQa,KAAM,OAAQC,GAAI,KAAMC,GAAI,KAAM,eAAgB,IAAK,mBAAoB,UAAWT,EAAAA,EAAAA,GAAE,QAAS,CAAEU,IAAK,SAAAC,GAAE,OAAK,EAAK/C,UAAY+C,CAAtB,EAA2BC,GAAI5E,KAAK6E,QAAS7B,KAAMhD,KAAKgD,KAAM8B,KAAM,OAAQxB,OAAQtD,KAAKsD,OAAQ,aAActD,KAAK+E,YAAad,MAAO,0DAA2De,QAAShF,KAAKgF,QAAQC,KAAKjF,MAAOkF,WAAYlF,KAAKkF,WAAWD,KAAKjF,MAAOmF,YAAanF,KAAKmF,YAAYF,KAAKjF,MAAOoF,OAAQpF,KAAKmF,YAAYF,KAAKjF,SAAWA,KAAK2B,SAAW3B,KAAKqF,2BAA6BrB,EAAAA,EAAAA,GAAE,MAAO,CAAE,cAAe,YAAaC,MAAO,wEAAyEE,MAAO,CAAEmB,gBAAiBtF,KAAKqF,yBAA0BE,eAAgBvF,KAAKwF,4BAA+BxB,EAAAA,EAAAA,GAAE,MAAO,CAAE,cAAe,WAAYC,MAAO,0EACznDjE,KAAKa,WAAa,GAAK,aAAcmD,EAAAA,EAAAA,GAAE,OAAQ,CAAEhB,KAAM,cAAgBhD,KAAKc,cAAgBkD,EAAAA,EAAAA,GAAE,MAAO,CAAE,cAAe,WAAYC,MAAO,oFAAqFD,EAAAA,EAAAA,GAAE,uBAAwB,CAAEyB,KAAM,WAAczF,KAAKgB,aAAegD,EAAAA,EAAAA,GAAE,YAAa,CAAE,cAAe,gBAAiBC,MAAO,QAASyB,QAAS1F,KAAK2B,UAAY3B,KAAKc,YAAc,WAAad,KAAKW,cAAegF,QAAS3F,KAAK4F,cAAcX,KAAKjF,MAAO6F,SAAU7F,KAAKc,aAAed,KAAK2B,UAAY3B,KAAKc,YAAcd,KAAKe,kBAAoBf,KAAKmB,oBAAsBnB,KAAKG,iBAAmBH,KAAK8F,iBAAmB9B,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,mBAAoBD,EAAAA,EAAAA,GAAE,OAAQ,CAAEhB,KAAM,gBAAkBhD,KAAK8F,gBAAkB9F,KAAKI,aAAe4D,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,kCAAmCD,EAAAA,EAAAA,GAAE,OAAQ,CAAEhB,KAAM,aAAgBhD,KAAKK,WAAa2D,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,gCAAiCD,EAAAA,EAAAA,GAAE,OAAQ,CAAEhB,KAAM,WACl6B,GApKgB,mBAqKjB,WAAgB,OAAO+C,EAAAA,EAAAA,GAAW/F,KAAQ,IArKzB,qBAsKjB,WAAwB,MAAO,CAC7B,aAAgB,CAAC,wBACf,KAxKa,I","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-image-upload.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-42f8725f.js';\n\nconst MxImageUpload = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mxThumbnailChange = createEvent(this, \"mxThumbnailChange\", 7);\n    this.hasInstructions = false;\n    this.hasSuccess = false;\n    this.hasError = false;\n    /** Set `acceptImage` to `false` and `acceptPdf` to `true` to only accept PDF files.  Set both to `false` to accept any file. */\n    this.acceptImage = true;\n    /** Set `acceptImage` to `false` and `acceptPdf` to `true` to only accept PDF files.  Set both to `false` to accept any file. */\n    this.acceptPdf = false;\n    /** Replaces the word \"image\" in the default dropzone text (i.e. \"No image to show\"). */\n    this.assetName = 'image';\n    /** Sets the width and height to 80px and changes the icon. */\n    this.avatar = false;\n    this.error = false;\n    /** The [`btnType` prop](/components/buttons.html) for the Upload button. */\n    this.uploadBtnType = 'contained';\n    /** Sets the thumbnail sizing strategy relative to the container. */\n    this.thumbnailSize = 'cover';\n    /** Set to `true` to show the Remove button, thumbnail, and `uploaded` slot content. */\n    this.isUploaded = false;\n    /** Set to `true` to disable the button and show the circular progress indicator. */\n    this.isUploading = false;\n    /** The text to display on the Remove button */\n    this.removeButtonLabel = 'Remove';\n    /** Set to `false` to hide the default Upload/Remove button. */\n    this.showButton = true;\n    /** Set to `false` to hide the dropzone icon. */\n    this.showIcon = true;\n    /** Set to `false` to hide the dropzone text. */\n    this.showDropzoneText = true;\n    /** The text to display on the Upload button */\n    this.uploadButtonLabel = 'Upload';\n    this.isDraggingOver = false;\n    this.isFileSelected = false;\n  }\n  onThumbnailUrlChange() {\n    if (this.thumbnailUrl)\n      this.isUploaded = true;\n    this.mxThumbnailChange.emit(this.thumbnailUrl);\n  }\n  connectedCallback() {\n    this.onThumbnailUrlChange();\n  }\n  componentWillRender() {\n    this.hasInstructions = !!this.element.querySelector('[slot=\"instructions\"]');\n    this.hasSuccess = !!this.element.querySelector('[slot=\"success\"]');\n    this.hasError = !!this.element.querySelector('[slot=\"error\"]');\n  }\n  async removeFile() {\n    if (!this.hasFile || this.isUploading)\n      return;\n    this.isFileSelected = false;\n    this.isUploaded = false;\n    this.isUploading = false;\n    this.fileInput.value = '';\n    this.fileInput.dispatchEvent(new window.Event('change', { bubbles: true, cancelable: true }));\n    this.fileInput.dispatchEvent(new window.Event('input', { bubbles: true, cancelable: true }));\n    this.mxThumbnailChange.emit(null);\n  }\n  async selectFile() {\n    if (this.hasFile)\n      return;\n    this.isFileSelected = false;\n    this.fileInput.value = '';\n    this.fileInput.click();\n  }\n  onButtonClick(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (this.isUploading)\n      return;\n    if (!this.hasFile) {\n      this.selectFile();\n    }\n    else {\n      this.removeFile();\n    }\n  }\n  onInput(e) {\n    this.error = false;\n    this.isFileSelected = e.target.files && e.target.files.length > 0;\n    if (this.isFileSelected)\n      this.setThumnailDataUri(e.target.files[0]);\n    else\n      this.thumbnailDataUri = null;\n  }\n  setThumnailDataUri(file) {\n    this.thumbnailDataUri = null;\n    if (!/\\.(jpe?g|png|gif)$/i.test(file.name))\n      return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.thumbnailDataUri = reader.result;\n      this.mxThumbnailChange.emit(this.thumbnailDataUri);\n    };\n    reader.readAsDataURL(file);\n  }\n  onDragOver() {\n    this.isDraggingOver = true;\n  }\n  onDragLeave() {\n    this.isDraggingOver = false;\n  }\n  get accept() {\n    const accept = [];\n    if (this.acceptImage)\n      accept.push('image/*');\n    if (this.acceptPdf)\n      accept.push('.pdf');\n    return accept.join(',') || null;\n  }\n  /** The width is applied to the host element in order to support percent-based widths */\n  get dropzoneWidth() {\n    if (this.width)\n      return this.width;\n    return this.avatar ? '80px' : '308px';\n  }\n  get dropzoneHeight() {\n    if (this.height)\n      return this.height;\n    return this.avatar ? '80px' : 'auto';\n  }\n  get dropzoneClass() {\n    let str = 'dropzone relative w-full h-full px-16 rounded-2xl overflow-hidden';\n    if (this.hasFile)\n      str += ' opacity-0';\n    if (this.isDraggingOver)\n      str += ' drag-over';\n    str += this.showIcon && this.showDropzoneText ? ' py-24' : ' py-16';\n    return str;\n  }\n  get hasFile() {\n    return this.isFileSelected || this.isUploaded;\n  }\n  get thumbnailBackgroundImage() {\n    let url = this.thumbnailUrl;\n    if (this.isFileSelected)\n      url = this.thumbnailDataUri;\n    if (!url)\n      return null;\n    return `url(${url})`;\n  }\n  get thumbnailBackgroundSize() {\n    if (!['contain', 'cover', 'auto', 'stretch'].includes(this.thumbnailSize))\n      return 'cover';\n    if (this.thumbnailSize === 'stretch')\n      return '100% 100%';\n    return this.thumbnailSize;\n  }\n  render() {\n    let iconJsx;\n    if (this.icon) {\n      iconJsx = h(\"i\", { \"data-testid\": \"upload-icon\", class: 'dropzone-icon ' + this.icon });\n    }\n    else if (this.avatar) {\n      iconJsx = h(\"i\", { \"data-testid\": \"avatar-icon\", class: \"mds-user-circle text-icon\" });\n    }\n    else {\n      iconJsx = h(\"i\", { \"data-testid\": \"image-icon\", class: 'mds-image text-icon' + (this.showDropzoneText ? ' mb-8' : '') });\n    }\n    return (h(Host, { class: \"mx-image-upload block\" }, h(\"div\", { \"data-testid\": \"dropzone-wrapper\", class: \"dropzone-wrapper flex w-full items-center justify-center relative rounded-2xl text-3 overflow-hidden\", style: { height: this.dropzoneHeight, width: this.dropzoneWidth } }, h(\"div\", { class: this.dropzoneClass }, h(\"div\", { class: \"flex flex-col items-center justify-center w-full h-full\" }, this.showIcon && iconJsx, h(\"slot\", { name: \"dropzone-text\" }, h(\"div\", { \"data-testid\": \"dropzone-text\", class: 'text-center' + (this.showDropzoneText && !this.avatar ? '' : ' hidden') }, h(\"p\", { class: \"subtitle1 my-0\" }, \"No \", this.assetName, \" to show\"), h(\"p\", { class: \"text-4 my-0 mt-4\" }, \"Click to add \", this.assetName)))), h(\"svg\", { class: \"dashed-border absolute inset-0 pointer-events-none\", width: \"100%\", height: \"100%\" }, h(\"rect\", { width: \"100%\", height: \"100%\", fill: \"none\", rx: \"16\", ry: \"16\", \"stroke-width\": \"1\", \"stroke-dasharray\": \"4,8\" })), h(\"input\", { ref: el => (this.fileInput = el), id: this.inputId, name: this.name, type: \"file\", accept: this.accept, \"aria-label\": this.elAriaLabel, class: \"absolute inset-0 w-full h-full opacity-0 cursor-pointer\", onInput: this.onInput.bind(this), onDragOver: this.onDragOver.bind(this), onDragLeave: this.onDragLeave.bind(this), onDrop: this.onDragLeave.bind(this) })), this.hasFile && this.thumbnailBackgroundImage && (h(\"div\", { \"data-testid\": \"thumbnail\", class: \"thumbnail absolute inset-0 bg-center bg-no-repeat pointer-events-none\", style: { backgroundImage: this.thumbnailBackgroundImage, backgroundSize: this.thumbnailBackgroundSize } })), h(\"div\", { \"data-testid\": \"uploaded\", class: 'flex items-center justify-center absolute inset-0 pointer-events-none ' +\n        (this.isUploaded ? '' : ' hidden') }, h(\"slot\", { name: \"uploaded\" })), this.isUploading && (h(\"div\", { \"data-testid\": \"progress\", class: \"uploading-progress flex items-center justify-center opacity-50 absolute inset-0\" }, h(\"mx-circular-progress\", { size: \"2rem\" })))), this.showButton && (h(\"mx-button\", { \"data-testid\": \"upload-button\", class: \"mt-16\", btnType: this.hasFile && !this.isUploading ? 'outlined' : this.uploadBtnType, onClick: this.onButtonClick.bind(this), disabled: this.isUploading }, this.hasFile && !this.isUploading ? this.removeButtonLabel : this.uploadButtonLabel)), (this.hasInstructions || this.assistiveText) && (h(\"p\", { class: \"caption1 my-16\" }, h(\"slot\", { name: \"instructions\" }, this.assistiveText))), this.hasSuccess && (h(\"p\", { class: \"upload-success caption1 my-16\" }, h(\"slot\", { name: \"success\" }))), this.hasError && (h(\"p\", { class: \"upload-error caption1 my-16\" }, h(\"slot\", { name: \"error\" })))));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"thumbnailUrl\": [\"onThumbnailUrlChange\"]\n  }; }\n};\n\nexport { MxImageUpload as mx_image_upload };\n"],"names":["MxImageUpload","hostRef","registerInstance","this","mxThumbnailChange","createEvent","hasInstructions","hasSuccess","hasError","acceptImage","acceptPdf","assetName","avatar","error","uploadBtnType","thumbnailSize","isUploaded","isUploading","removeButtonLabel","showButton","showIcon","showDropzoneText","uploadButtonLabel","isDraggingOver","isFileSelected","thumbnailUrl","emit","onThumbnailUrlChange","element","querySelector","hasFile","fileInput","value","dispatchEvent","window","Event","bubbles","cancelable","click","e","stopPropagation","preventDefault","removeFile","selectFile","target","files","length","setThumnailDataUri","thumbnailDataUri","file","test","name","reader","FileReader","onload","result","readAsDataURL","accept","push","join","width","height","str","url","includes","iconJsx","icon","h","class","Host","style","dropzoneHeight","dropzoneWidth","dropzoneClass","fill","rx","ry","ref","el","id","inputId","type","elAriaLabel","onInput","bind","onDragOver","onDragLeave","onDrop","thumbnailBackgroundImage","backgroundImage","backgroundSize","thumbnailBackgroundSize","size","btnType","onClick","onButtonClick","disabled","assistiveText","getElement"],"sourceRoot":""}