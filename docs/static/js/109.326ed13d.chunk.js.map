{"version":3,"file":"static/js/109.326ed13d.chunk.js","mappings":"mNAEMA,EAAmB,WACvB,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,SAAUC,EAAAA,EAAAA,GAAYF,KAAM,UAAW,GAE5CA,KAAKG,UAAW,CACjB,CANsB,4CAOvB,WACEH,KAAKI,oBACN,GATsB,+BAUvB,WACEJ,KAAKI,oBACN,GAZsB,iCAavB,SAAoBC,GAClB,IAAMC,EAAeD,EAAEE,OAAOC,QAAQ,oBACjCF,IAAgBA,EAAaG,WAElCT,KAAKU,YAAYJ,EAAaK,OAC9BX,KAAKC,QAAQW,KAAKZ,KAAKW,OACxB,GAnBsB,yBAoBvB,SAAYA,GACNX,KAAKW,QAAUA,EACjBX,KAAKW,MAAQA,EACLX,KAAKG,WACbH,KAAKW,MAAQ,KAChB,GAzBsB,gCA0BvB,WAAqB,WACHX,KAAKa,QAAQC,iBAAiB,oBACtCC,SAAQ,SAAAC,GAAM,OAAKA,EAAOC,SAAWD,EAAOL,QAAU,EAAKA,KAA7C,GACvB,GA7BsB,oBA8BvB,WACE,OAAQO,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAO,cAAeC,KAAM,eAAgBH,EAAAA,EAAAA,GAAE,OAAQ,MACzE,GAhCsB,mBAiCvB,WAAgB,OAAOI,EAAAA,EAAAA,GAAWtB,KAAQ,IAjCnB,qBAkCvB,WAAwB,MAAO,CAC7B,MAAS,CAAC,iBACR,KApCmB,I","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-toggle-button-group.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-42f8725f.js';\n\nconst MxToggleButtonGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mxInput = createEvent(this, \"mxInput\", 7);\n    /** Set to `true` to prevent deselecting once a selection has been made. */\n    this.required = false;\n  }\n  onValueChange() {\n    this.updateChildButtons();\n  }\n  connectedCallback() {\n    this.updateChildButtons();\n  }\n  onToggleButtonClick(e) {\n    const toggleButton = e.target.closest('mx-toggle-button');\n    if (!toggleButton || toggleButton.disabled)\n      return;\n    this.toggleValue(toggleButton.value);\n    this.mxInput.emit(this.value);\n  }\n  toggleValue(value) {\n    if (this.value !== value)\n      this.value = value;\n    else if (!this.required)\n      this.value = null;\n  }\n  updateChildButtons() {\n    const buttons = this.element.querySelectorAll('mx-toggle-button');\n    buttons.forEach(button => (button.selected = button.value === this.value));\n  }\n  render() {\n    return (h(Host, { class: \"inline-flex\", role: \"radiogroup\" }, h(\"slot\", null)));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"onValueChange\"]\n  }; }\n};\n\nexport { MxToggleButtonGroup as mx_toggle_button_group };\n"],"names":["MxToggleButtonGroup","hostRef","registerInstance","this","mxInput","createEvent","required","updateChildButtons","e","toggleButton","target","closest","disabled","toggleValue","value","emit","element","querySelectorAll","forEach","button","selected","h","Host","class","role","getElement"],"sourceRoot":""}