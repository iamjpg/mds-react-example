{"version":3,"file":"static/js/4.bb35bf45.chunk.js","mappings":"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","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-time-picker.entry.js","../node_modules/@moxiworks/mds/dist/esm/utils-eee50014.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-42f8725f.js';\nimport { u as uuidv4, p as propagateDataAttributes, b as parseTimeString } from './utils-eee50014.js';\n\nconst timeOptions = [];\nfor (let i = 0; i < 24; i++) {\n  timeOptions.push({ hours: i, minutes: 0 });\n  timeOptions.push({ hours: i, minutes: 30 });\n}\nconst MxTimePicker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dataAttributes = {};\n    this.isTimeInputSupported = false;\n    this.uuid = uuidv4();\n    this.dense = false;\n    this.disabled = false;\n    this.error = false;\n    this.floatLabel = false;\n    this.isFocused = false;\n    this.isInputDirty = false;\n    this.componentWillRender = propagateDataAttributes;\n  }\n  onClick(e) {\n    e.stopPropagation();\n    // Resize the menu width to match the input.  This is done every click in case the input is resized after initial load.\n    this.menu.style.width = this.pickerWrapper.getBoundingClientRect().width + 'px';\n  }\n  onValueChange() {\n    this.normalizeValue();\n    this.updateInputValue();\n  }\n  componentWillLoad() {\n    this.normalizeValue();\n  }\n  componentDidLoad() {\n    this.menu.anchorEl = this.pickerWrapper;\n    this.menu.triggerEl = this.menuButton;\n    // HTMLInputElement.type will return \"text\" if the \"time\" value is not supported (i.e. Safari <14.1)\n    this.isTimeInputSupported = this.inputElem.type === 'time';\n    this.updateInputValue();\n  }\n  normalizeValue() {\n    // If HH:MM:ss.mmm value is passed, change it to just HH:MM\n    if (this.value && /\\d\\d:\\d\\d:\\d\\d/.test(this.value)) {\n      let [hours] = this.value.split(':');\n      const [, minutes] = this.value.split(':');\n      if (this.value.toUpperCase().includes('PM')) {\n        hours = (Number(hours) + 12).toString();\n      }\n      if (hours.length === 1)\n        hours = '0' + hours;\n      this.value = [hours, minutes].join(':');\n    }\n  }\n  onInput(e) {\n    if (!this.isTimeInputSupported) {\n      e.stopPropagation(); // For <input type=\"text\">, the input event will be dispatched on blur\n      if (this.isFocused)\n        this.isInputDirty = true;\n    }\n  }\n  onBlur() {\n    if (!this.menu || !this.menu.isOpen) {\n      // Style as focused/active while menu is open\n      this.isFocused = false;\n    }\n    if (!this.isTimeInputSupported && this.isInputDirty) {\n      const time = parseTimeString(this.inputElem.value);\n      if (time === null) {\n        // Invalid time entered into <input type=text>\n        this.error = true;\n        return;\n      }\n      this.setValue(time);\n      this.updateInputValue();\n    }\n  }\n  onFocus() {\n    this.isFocused = true;\n    this.error = false;\n    this.isInputDirty = false;\n  }\n  /** Focus the input when clicking the floating label.\n   * Using `pointer-events: none` on the label could cause the user to unknowingly click on\n   * the minutes/AM/PM entry, which would be annoying. */\n  onClickLabel() {\n    this.inputElem.focus();\n  }\n  onMenuClose(e) {\n    e.stopPropagation();\n    if (!this.inputElem.contains(document.activeElement))\n      this.isFocused = false;\n  }\n  onMenuOpen() {\n    this.isFocused = true;\n  }\n  /** This is only called if <input type=\"time\"> is not supported. */\n  setValue({ hours, minutes }) {\n    if (this.disabled)\n      return;\n    this.error = false;\n    this.value = ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2);\n    this.updateInputValue();\n    this.inputElem.dispatchEvent(new Event('input', { cancelable: true, bubbles: true }));\n  }\n  updateInputValue() {\n    if (!this.inputElem)\n      return;\n    if (this.value == null) {\n      this.inputElem.value = '';\n      return;\n    }\n    this.inputElem.value = this.value;\n    if (!this.isTimeInputSupported) {\n      this.inputElem.dispatchEvent(new Event('input', { cancelable: true, bubbles: true }));\n      // If time input is not supported, format text input value for locale\n      const [hours, minutes] = this.value.split(':').map(Number);\n      this.inputElem.value = this.getLocalizedTimeString({ hours, minutes });\n    }\n  }\n  getLocalizedTimeString({ hours, minutes }) {\n    const date = new Date();\n    date.setHours(hours, minutes);\n    return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });\n  }\n  get labelClassNames() {\n    let str = 'block';\n    if (this.floatLabel) {\n      str += ' absolute mt-0 left-12 px-4';\n      if (this.dense)\n        str += ' dense text-4';\n      if (this.isFocused || this.inputHasText)\n        str += ' floating';\n      if (this.isFocused)\n        str += ' -ml-1'; // prevent shifting due to border-width change\n    }\n    else {\n      str += ' subtitle2 mb-4 pointer-events-none';\n    }\n    return str;\n  }\n  get inputHasText() {\n    // HTMLInputElement.validity.badInput is true if a partial time has been typed.\n    return this.value || (this.inputElem && this.inputElem.validity.badInput);\n  }\n  get pickerWrapperClass() {\n    let str = 'picker-wrapper w-152 flex items-center relative rounded-lg';\n    str += this.dense ? ' h-36' : ' h-48';\n    str += this.error || this.isFocused ? ' border-2' : ' border';\n    if (this.disabled)\n      str += ' disabled';\n    if (this.isFocused)\n      str += ' focused';\n    return str;\n  }\n  get inputClass() {\n    let str = 'absolute inset-0 w-full h-full pl-12 overflow-hidden outline-none appearance-none select-none bg-transparent';\n    if (this.isFocused || this.error)\n      str += ' -ml-1'; // prevent shifting due to border-width change\n    if (this.floatLabel && !this.isFocused && !this.inputHasText)\n      str += ' opacity-0'; // Hide input placeholder while floating label is inside input\n    return str;\n  }\n  get menuButtonClass() {\n    let str = 'menu-button text-icon cursor-pointer border-0 absolute flex items-center h-full right-12 space-x-8';\n    if (this.disabled)\n      str += ' pointer-events-none';\n    if (this.isFocused || this.error)\n      str += ' -mr-1'; // prevent shifting due to border-width change\n    return str;\n  }\n  render() {\n    const labelJsx = (h(\"label\", { htmlFor: this.inputId || this.uuid, class: this.labelClassNames, onClick: this.onClickLabel.bind(this) }, this.label));\n    return (h(Host, { class: 'mx-time-picker block text-3' + (this.error ? ' error' : '') }, this.label && !this.floatLabel && labelJsx, h(\"div\", { ref: el => (this.pickerWrapper = el), class: this.pickerWrapperClass }, h(\"input\", Object.assign({ \"aria-label\": this.elAriaLabel || this.label, class: this.inputClass, id: this.inputId || this.uuid, name: this.name, onBlur: this.onBlur.bind(this), onFocus: this.onFocus.bind(this), onInput: this.onInput.bind(this), ref: el => (this.inputElem = el), tabindex: \"0\", type: \"time\", disabled: this.disabled }, this.dataAttributes)), this.label && this.floatLabel && labelJsx, h(\"button\", { type: \"button\", \"aria-label\": \"Open time menu\", ref: el => (this.menuButton = el), class: this.menuButtonClass, \"data-testid\": \"menu-button\", disabled: this.disabled }, h(\"i\", { class: this.error ? 'mds-warning-circle' : 'mds-clock' }))), this.assistiveText && (h(\"div\", { class: \"caption1 mt-4 ml-16\" }, h(\"span\", { \"data-testid\": \"assistive-text\", class: \"assistive-text\" }, this.assistiveText))), h(\"mx-menu\", { ref: el => (this.menu = el), placement: \"bottom\", offset: [0, 1], onMxClose: this.onMenuClose.bind(this), onMxOpen: this.onMenuOpen.bind(this) }, timeOptions.map(timeOption => (h(\"mx-menu-item\", { onClick: this.setValue.bind(this, timeOption) }, this.getLocalizedTimeString(timeOption)))))));\n  }\n  get element() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"onValueChange\"]\n  }; }\n};\n\nexport { MxTimePicker as mx_time_picker };\n","// https://github.com/ionic-team/capacitor/blob/b893a57aaaf3a16e13db9c33037a12f1a5ac92e0/cli/src/util/uuid.ts\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\nfunction queryPrefersReducedMotion() {\n  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n  return !mediaQuery || mediaQuery.matches;\n}\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction isDateObject(val) {\n  if (typeof val !== 'object')\n    return false;\n  return 'getTime' in val && !isNaN(val.getTime()); // \"Invalid Date\" objects return NaN for getTime()\n}\n/** Converts a time string such as \"15:30\" or \"3:30PM\" into `{ hours: 15, minutes: 30 }` */\n/** @returns Time object, or `null` if the string could not be parsed as a valid time */\nfunction parseTimeString(str) {\n  if (str == null || str.trim() === '')\n    return;\n  const isExplicitAM = str.toLowerCase().includes('a');\n  const isExplicitPM = str.toLowerCase().includes('p');\n  const digits = str.replace(/[^0-9]/g, ''); // Remove non-numeric characters\n  if (!digits.length || digits.length > 4)\n    return null;\n  // If only 1 or 2 digits entered, assume only an hour was entered\n  let hours = digits.length <= 2 ? Number(digits) : Number(digits.slice(0, -2));\n  const minutes = digits.length <= 2 ? 0 : Number(digits.slice(-2));\n  if (hours === 12 && isExplicitAM)\n    hours = 0; // '12:00AM' -> 0 hours\n  if (hours < 12 && isExplicitPM)\n    hours += 12; // '2:00PM' -> 14 hours\n  if (hours > 23 || minutes > 59)\n    return null;\n  return { hours, minutes };\n}\n/** Returns the `clientX`, `clientY`, `pageX`, `pageY` from any MouseEvent or TouchEvent. */\nfunction getCursorCoords(e) {\n  if (e.changedTouches)\n    return e.changedTouches[0];\n  else if (e.touches)\n    return e.touches[0];\n  else\n    return e;\n}\n/** Returns a DOMRect for an element similar to getBoundingClientRect, however the\n * position ignores CSS transforms and accounts for scrolling. */\nfunction getPageRect(el) {\n  const { height, width } = el.getBoundingClientRect();\n  let top = 0;\n  let left = 0;\n  do {\n    top += el.offsetTop;\n    left += el.offsetLeft;\n    el = el.offsetParent;\n  } while (el);\n  return { top, left, width, height, bottom: top + height, right: left + width };\n}\n/** Return the client boundaries of an element (or the window) */\nfunction getBounds(container) {\n  if (container === window) {\n    return { top: 0, right: window.innerWidth, bottom: window.innerHeight, left: 0 };\n  }\n  return container.getBoundingClientRect();\n}\n/** Determines whether an element needs to be scrolled into view */\nfunction isScrolledOutOfView(el) {\n  const bounds = el.getBoundingClientRect(); // getBoundingClientRect accounts for CSS translate\n  const scrollBounds = getBounds(getScrollingParent(el));\n  if (bounds.top < scrollBounds.top)\n    return true;\n  if (bounds.bottom > scrollBounds.bottom)\n    return true;\n  if (bounds.left < scrollBounds.left)\n    return true;\n  if (bounds.left > scrollBounds.right)\n    return true; // It's okay if the right edge is out of bounds\n  return false;\n}\n/** Get the nearest scrolling ancestor, which could be the window */\nfunction getScrollingParent(el) {\n  if (!(el instanceof HTMLElement))\n    return window;\n  if (isScrollable(el))\n    return el;\n  return getScrollingParent(el.parentNode);\n}\nfunction isScrollable(el) {\n  const computedStyle = window.getComputedStyle(el);\n  const overflowRegex = /(auto|scroll)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n  return properties.find(property => overflowRegex.test(computedStyle[property]));\n}\n/** Remove data attributes from the host element, and store them in this.dataAttributes,\n * so they can be applied to the native element in the render function. */\nfunction propagateDataAttributes() {\n  Array.from(this.element.attributes).forEach((attribute) => {\n    if (!/^data-/.test(attribute.name))\n      return;\n    this.element.removeAttribute(attribute.name);\n    this.dataAttributes[attribute.name] = attribute.value;\n  });\n}\n\nexport { getCursorCoords as a, parseTimeString as b, capitalize as c, getScrollingParent as d, getBounds as e, isScrolledOutOfView as f, getPageRect as g, isDateObject as i, propagateDataAttributes as p, queryPrefersReducedMotion as q, uuidv4 as u };\n"],"names":["timeOptions","i","push","hours","minutes","MxTimePicker","hostRef","registerInstance","this","dataAttributes","isTimeInputSupported","uuid","uuidv4","dense","disabled","error","floatLabel","isFocused","isInputDirty","componentWillRender","propagateDataAttributes","e","stopPropagation","menu","style","width","pickerWrapper","getBoundingClientRect","normalizeValue","updateInputValue","anchorEl","triggerEl","menuButton","inputElem","type","value","test","split","toUpperCase","includes","Number","toString","length","join","isOpen","time","parseTimeString","setValue","focus","contains","document","activeElement","slice","dispatchEvent","Event","cancelable","bubbles","map","getLocalizedTimeString","date","Date","setHours","toLocaleTimeString","hour","minute","str","inputHasText","validity","badInput","labelJsx","h","htmlFor","inputId","class","labelClassNames","onClick","onClickLabel","bind","label","Host","ref","el","pickerWrapperClass","Object","assign","elAriaLabel","inputClass","id","name","onBlur","onFocus","onInput","tabindex","menuButtonClass","assistiveText","placement","offset","onMxClose","onMenuClose","onMxOpen","onMenuOpen","timeOption","getElement","replace","c","r","Math","random","queryPrefersReducedMotion","mediaQuery","window","matchMedia","matches","capitalize","charAt","isDateObject","val","isNaN","getTime","trim","isExplicitAM","toLowerCase","isExplicitPM","digits","getCursorCoords","changedTouches","touches","getPageRect","height","top","left","offsetTop","offsetLeft","offsetParent","bottom","right","getBounds","container","innerWidth","innerHeight","isScrolledOutOfView","bounds","scrollBounds","getScrollingParent","HTMLElement","computedStyle","getComputedStyle","overflowRegex","find","property","isScrollable","parentNode","Array","from","element","attributes","forEach","attribute","removeAttribute"],"sourceRoot":""}