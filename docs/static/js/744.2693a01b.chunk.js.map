{"version":3,"file":"static/js/744.2693a01b.chunk.js","mappings":"oMAEMA,EAAO,WACX,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,cAAe,EAEpBD,KAAKE,SAAU,EAEfF,KAAKG,OAAS,EAEdH,KAAKI,QAAS,EAEdJ,KAAKK,MAAO,CACb,CAZU,gDAaX,WACEL,KAAKC,cAAgBD,KAAKM,QAAQC,iBACnC,GAfU,sBAgBX,WACE,OAAOP,KAAKQ,WAAuBC,IAAfT,KAAKU,KAC1B,GAlBU,yBAmBX,WACE,MAAI,EAAC,OAAOD,GAAWE,SAASX,KAAKY,WAC5B,KACLZ,KAAKY,UAAUC,OACVb,KAAKY,UACP,QACR,GAzBU,2BA0BX,WACE,IAAIE,EAAM,yFAoCV,OAlCId,KAAKe,WACPD,GAAO,gBAEAd,KAAKE,QACZY,GAAO,WAGPA,GAAO,cAGa,MAAlBd,KAAKY,UACPE,GAAO,aAEAd,KAAKC,cACZa,GAAO,QACPA,GAAOd,KAAKe,WAAa,QAAU,UAGnCD,GAAO,QACPA,GAAOd,KAAKe,WAAa,QAAU,SAGhCf,KAAKC,eACRa,GAAO,sBACHd,KAAKI,QACPU,GAAO,WAAJ,OAAed,KAAKG,OAApB,oBACHW,GAAOd,KAAKK,KAAO,sBAAwB,yBAG3CS,GAAO,QAAJ,OAAYd,KAAKG,OAAjB,qBACHW,GAAOd,KAAKK,KAAO,mBAAqB,qBAE1CS,GAAOd,KAAKK,KAAL,gBAAqBL,KAAKG,OAA1B,sCAAgEH,KAAKG,OAArE,qBAEF,CAACW,EAAKd,KAAKgB,YAAYC,KAAK,IACpC,GAhEU,oBAiEX,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAO,kCAAmCF,EAAAA,EAAAA,GAAE,OAAQ,MAAOlB,KAAKqB,eAAiBH,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAOpB,KAAKsB,gBAAiB,cAAe,aAAetB,KAAKqB,gBAAiBH,EAAAA,EAAAA,GAAE,IAAK,CAAEE,MAAO,aAAepB,KAAKqB,kBAAsBH,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAOpB,KAAKsB,iBAAmBtB,KAAKQ,OAAQU,EAAAA,EAAAA,GAAE,IAAK,CAAEE,MAAOpB,KAAKQ,MAAQR,KAAKe,WAAa,GAAK,WAAaf,KAAKU,OACzX,GAnEU,mBAoEX,WAAgB,OAAOa,EAAAA,EAAAA,GAAWvB,KAAQ,KApE/B,I","sources":["../node_modules/@moxiworks/mds/dist/esm/mx-badge.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-42f8725f.js';\n\nconst MxBadge = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.isStandalone = true;\n    /** Make the corners a little more square (best for standalone text) */\n    this.squared = false;\n    /** Offset badge inward by this many pixels (e.g. 10 for icon buttons) */\n    this.offset = 0;\n    /** Anchor the badge to the bottom of the wrapped content */\n    this.bottom = false;\n    /** Anchor the badge to the left of the wrapped content */\n    this.left = false;\n  }\n  componentWillLoad() {\n    this.isStandalone = !this.element.firstElementChild;\n  }\n  get isIconOnly() {\n    return this.icon && this.value === undefined;\n  }\n  get indicatorIcon() {\n    if ([false, undefined].includes(this.indicator))\n      return null;\n    if (this.indicator.length)\n      return this.indicator;\n    return 'circle';\n  }\n  get badgeClassNames() {\n    let str = 'badge inline-flex items-center justify-center text-4 font-semibold pointer-events-none';\n    // Border-Radius\n    if (this.isIconOnly) {\n      str += ' rounded-full';\n    }\n    else if (this.squared) {\n      str += ' rounded';\n    }\n    else {\n      str += ' rounded-xl';\n    }\n    // Width & Height\n    if (this.indicator != null) {\n      str += ' w-12 h-12';\n    }\n    else if (this.isStandalone) {\n      str += ' h-24';\n      str += this.isIconOnly ? ' w-24' : ' px-8';\n    }\n    else {\n      str += ' h-20';\n      str += this.isIconOnly ? ' w-20' : ' px-6';\n    }\n    // Position Anchored Badge\n    if (!this.isStandalone) {\n      str += ' absolute transform';\n      if (this.bottom) {\n        str += ` bottom-${this.offset} translate-y-1/2`;\n        str += this.left ? ' origin-bottom-left' : ' origin-bottom-right';\n      }\n      else {\n        str += ` top-${this.offset} -translate-y-1/2`;\n        str += this.left ? ' origin-top-left' : ' origin-top-right';\n      }\n      str += this.left ? ` left-${this.offset} -translate-x-1/2` : ` right-${this.offset} translate-x-1/2`;\n    }\n    return [str, this.badgeClass].join(' ');\n  }\n  render() {\n    return (h(Host, { class: \"mx-badge inline-flex relative\" }, h(\"slot\", null), this.indicatorIcon ? (h(\"span\", { class: this.badgeClassNames, \"data-testid\": 'indicator-' + this.indicatorIcon }, h(\"i\", { class: 'mds-badge-' + this.indicatorIcon }))) : (h(\"span\", { class: this.badgeClassNames }, this.icon && h(\"i\", { class: this.icon + (this.isIconOnly ? '' : ' mr-4') }), this.value))));\n  }\n  get element() { return getElement(this); }\n};\n\nexport { MxBadge as mx_badge };\n"],"names":["MxBadge","hostRef","registerInstance","this","isStandalone","squared","offset","bottom","left","element","firstElementChild","icon","undefined","value","includes","indicator","length","str","isIconOnly","badgeClass","join","h","Host","class","indicatorIcon","badgeClassNames","getElement"],"sourceRoot":""}